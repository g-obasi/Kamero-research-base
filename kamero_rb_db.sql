-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.institutions
(
    id integer NOT NULL DEFAULT nextval('institutions_id_seq'::regclass),
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    permissions jsonb,
    CONSTRAINT institutions_pkey PRIMARY KEY (id)
    );

CREATE TABLE IF NOT EXISTS public.research_materials
(
    id integer NOT NULL DEFAULT nextval('research_materials_id_seq'::regclass),
    title character varying(100) COLLATE pg_catalog."default" NOT NULL,
    abstract text COLLATE pg_catalog."default",
    file_url character varying(255) COLLATE pg_catalog."default",
    tags jsonb,
    institution_id integer,
    user_id integer,
    status character varying(20) COLLATE pg_catalog."default" DEFAULT 'pending'::character varying,
    CONSTRAINT research_materials_pkey PRIMARY KEY (id)
    );

CREATE TABLE IF NOT EXISTS public.research_topics
(
    id integer NOT NULL DEFAULT nextval('research_topics_id_seq'::regclass),
    title character varying(100) COLLATE pg_catalog."default" NOT NULL,
    tags jsonb,
    CONSTRAINT research_topics_pkey PRIMARY KEY (id)
    );

CREATE TABLE IF NOT EXISTS public.users
(
    id integer NOT NULL DEFAULT nextval('users_id_seq'::regclass),
    username character varying(50) COLLATE pg_catalog."default" NOT NULL,
    password character varying(100) COLLATE pg_catalog."default" NOT NULL,
    role character varying(20) COLLATE pg_catalog."default" NOT NULL,
    email character varying(100) COLLATE pg_catalog."default",
    reset_password_token character varying(255) COLLATE pg_catalog."default",
    reset_password_expires bigint,
    institution_id integer,
    CONSTRAINT users_pkey PRIMARY KEY (id),
    CONSTRAINT users_email_key UNIQUE (email),
    CONSTRAINT users_username_key UNIQUE (username)
    );

ALTER TABLE IF EXISTS public.research_materials
    ADD CONSTRAINT research_materials_institution_id_fkey FOREIGN KEY (institution_id)
    REFERENCES public.institutions (id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.research_materials
    ADD CONSTRAINT research_materials_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.users
    ADD CONSTRAINT fk_institution FOREIGN KEY (institution_id)
    REFERENCES public.institutions (id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;

END;